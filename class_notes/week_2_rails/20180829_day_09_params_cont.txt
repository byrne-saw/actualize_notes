you can write logic (like an if statement) in a view
  it's not a hard law to keep logic in the controller, but you should really only do it if you're changing the json

puts or p in the controller will print to the terminal


url segment params
  get "/home/:wildcard"
  url segment is any piece in between / /  

: on the routes page define a wild card
: in the url will always break


from params (body params)
  -the only way to send body params is with post, patch, or delete (not get)


use insomnia whenever you need to send non-get requests

####
Re-watching Lecture on Params
####

Params: (parameters)
  -passing along info from the user to our API/web application
  -Params are always a hash
  -params is a keyword in rails only accessible in the controller action, gives access to the special hash in the url path 
  -Params is just an empty hash that the user fills


In routes.rb:
  verb XXXXXXXX => YYYYYYY#ZZZZZZZ
  X : the thing in the url path that follows my domain
  Y : controller it's looking for
  Z : the action ()


when you use puts in a controller file, it prints to the terminal

Logic goes in the controller action as a general rule of thumb. 
  -Logic can go in the view, but it should be limited to modifying the actual view (what key value might be displayed). Ex
    if @message
      json.message @message
    end
  -changes the keys available to the view

3 types of Params:
  1) String Query Params
  2) URL Segment Params
  3) Body Params aka Form Params

String Query Params:
  - ?  defines the string query params: everything following a ? in the url are string query params
  use & to separate multiple params in the url path 
  - you can add any number of string query params to a url, but only the ones in a controller action would be used/accessed


URL Segment Params:
  -any piece in between to // after the domain
  -a way of defining pieces of our url to take in information.
  -wild card - :wildcard 
  - : are only used on the routes page, not in the url
  - rails let you the params hash allows you treat keys as symbols or strings interchangeably 

Body Params (Form Params):
  - we send Form Params though HTML
  - can't be sent though get (or url bar)
  - body params are typically sent for security (get requests can been seen publicly)
  - request has meta info (head) and body



