##
How our data is organized in the database
##

  rake db:create - makes a file cabnite
  rails g migration - the organization structure, like files
  rake db:migrate - files go into file cabnite
  seeds.rb is the data, just a ruby file 
    rake db:seed - the data is translated through sql and pushed into the database

  "You always need the structure, before putting the data in"

##


Anytime you generate a model or migration, you should always check the migration file for typos, syntax errors.

Convention of a class in Ruby is singular, a table in SQL is plural. 

Before you rake db:migrate you can change the migrate file.  Never touch it after it's been migrated.

Afterg migrating, a schema is added. This is a report. Don't change this directly in the file. A Schmea is generated each time you do a migrate. 

Generating a migration to add something to a model.

    rails g migration AddXxxxToYYYYY
    - new migration file is created

In the new migration file: 
      class AddPriceToProducts < ActiveRecord::Migration[5.2]
        def change
          add_column :prodcuts, :price, :integer
        end
      end

Rails Guides - Rails documentation: https://guides.rubyonrails.org/

  Postgres does not allow floats. Instead decimals.
  Ruby uses floats - try 0.28 * 100 in irb 
  Postgres doesn't like Binary files (which are images/movies/other files)
  :primary_key 
  string - 255 lenghth limit
  text - Unlimited length (depending on DBMS)
https://stackoverflow.com/questions/11889048/is-there-documentation-for-the-rails-column-types

When you drop a database and then rebuild it, it will use all the migration files to rebuild the db strcutre. Another reason why you must not change the migration files after they are migrated. 

decimals
  need to define percision and scale
  scale is how many decimal places to the right
  percision is how many total characters it takes

id - can't be part of any attribute in Rails - even Example_id 
  same for type

in irb, or rails console you can us an _ to refer to the previous retruned value

sublime text 
  - multiple cursors, having something highlighted, ctrl + t
  - cmd c on a line will copy a whole line as defult (when nothing is highlighted) 

save the data in a database before you make changes
  there's a gem seed_dump that will take all the data from your database and write it to your seed.rb file

      To use seed dump gem

      Stop rails server with Ctl + c
      gem ‘seed_dump’ in gem file
      bundle
      rails db:seed:dump
      rails db:drop
      rails db:create
      rails db:migrate
      rails db:seed
      rails server




